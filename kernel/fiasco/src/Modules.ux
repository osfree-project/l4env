# -*- makefile -*-

SUBSYSTEMS = JABI ABI DRIVERS KERNEL LIBK LIBAMM CXXLIB \
	     TCBOFFSET SYMBOLS VERSION GBLCFG

ifeq ("$(CONFIG_GSTABS)","y")     
  SUBSYSTEMS		+= LINES
endif

PREPROCESS_PARTS	+= arch $(CONFIG_ABI) 32bit $(CONFIG_XARCH)    \
			   fpu jdb_thread_names

ifeq ("$(CONFIG_LIST_ALLOC_SANITY)","y")
  PREPROCESS_PARTS	+= list_alloc_debug
endif

ifeq ("$(CONFIG_JDB)","y")
  PREPROCESS_PARTS	+= debug log
endif

ifeq ("$(CONFIG_TASK_CAPS)","y")
  PREPROCESS_PARTS      += caps
endif

PREPROCESS_PARTS      += abs_syscalls auto_map_kip

ifeq ("$(CONFIG_PERF_CNT)","y")
  PREPROCESS_PARTS	+= perf_cnt
endif
ifeq ("$(CONFIG_EXCEPTION_IPC)","y")
  PREPROCESS_PARTS	+= utcb exc_ipc
endif
ifeq ("$(CONFIG_HANDLE_SEGMENTS)","y")
  PREPROCESS_PARTS	+= segments
endif

ifeq ("$(CONFIG_CONTEXT_4K)","y")
  PREPROCESS_PARTS	+= context_4k
endif

#
# TYPES subsystem
#
PRIVATE_INCDIR 		+= types/$(CONFIG_XARCH) types

#
# ABI Subsystem
#
ABI			:= libabi.a
VPATH			+= abi/$(CONFIG_XARCH) abi 


INTERFACES_ABI		:= kip l4_types utcb

kip_IMPL		:= kip kip-ia32 kip-debug kip-ia32-debug
l4_types_IMPL		:= l4_types l4_types-iofp l4_types-32bit \
			   l4_types-debug l4_types-caps
utcb_IMPL		:= utcb-ia32-ux

#
# JABI Subsystem
#
JABI			:= libjabi.a
VPATH			+= jabi/$(CONFIG_XARCH) jabi
INTERFACES_JABI		:= jdb_ktrace

#
# DRIVERS subsystem
#
DRIVERS			:= libdrivers.a
VPATH			+= drivers/$(CONFIG_XARCH) drivers
PRIVATE_INCDIR		+= drivers/$(CONFIG_XARCH) drivers
INTERFACES_DRIVERS	:= mux_console console filter_console processor \
			   delayloop

processor_IMPL		:= processor processor-ux

#
# KERNEL subsystem
#
KERNEL			:= kernel.image
KERNEL_EXTRA		:= irq0
VPATH			+= kern/$(CONFIG_XARCH) kern/shared kern
PRIVATE_INCDIR		+= kern/$(CONFIG_XARCH) kern/shared kern

ifeq ("$(CONFIG_UX_CON)","y")
  KERNEL_EXTRA		+= ux_con
  VPATH			+= drivers/ux
endif

ifeq ("$(CONFIG_UX_NET)","y")
  KERNEL_EXTRA		+= ux_net
  VPATH			+= drivers/ux
endif

# KERNEL modules.  

# Important: The following list must be roughly sorted according to
# link dependencies.  The Unit test for a module M links against all
# modules that precede M in this list, minus sibling modules (those
# modules that _directly_ precede M and that M does not include).

INTERFACES_KERNEL	:= simpleio kernel_console panic warn list_alloc  \
			   mem_layout globals loader vhw kip_init	  \
			   boot_info cmdline config jdb_symbol		  \
			   tb_entry perf_cnt jdb_tbuf x86desc		  \
			   emulation pic usermode cpu trampoline cpu_lock \
			   region entry_frame kmem mapped_alloc mem_unit  \
			   kmem_alloc slab_cache_anon kmem_slab_simple	  \
			   vmem_alloc paging kmem_slab fpu_state fpu	  \
			   sched_context switch_lock timer timeout	  \
			   cap_space mem_space space context helping_lock \
			   cap_space_alloc space_index mapdb map_util	  \
			   hostproc task kernel_task                      \
			   thread_lock preemption timeslice_timeout	  \
			   ipc_timeout deadline_timeout thread_state	  \
			   sender receiver thread			  \
			   kernel_thread dirq	  			  \
			   banner fpu_alloc irq main kern_types		  \
			   startup irq_alloc libc_support		  \
			   jdb_dbinfo allocators jdb fb net utcb_init	  \
			   jdb_core jdb_module jdb_table         	  \
			   jdb_thread_list jdb_input jdb_dump		  \
			   jdb_lines jdb_tcb jdb_prompt_module jdb_bt	  \
			   jdb_mapdb jdb_ptab jdb_kern_info jdb_counters  \
			   glibc_getchar jdb_trace jdb_trace_set	  \
			   tb_entry_output jdb_tbuf_init kern_cnt  	  \
			   jdb_tbuf_output jdb_tbuf_show jdb_tbuf_events  \
			   jdb_misc checksum watchdog terminate		  \
			   jdb_screen push_console jdb_bp		  \
			   jdb_attach_irq sys_call_page			  \
			   space_index_util long_msg jdb_timeout gdt	  \
			   idt tss trap_state jdb_prompt_ext		  \
			   jdb_handler_queue jdb_exit_module		  \
			   jdb_halt_thread  jdb_tetris                    \
			   jdb_kern_info_kip jdb_kern_info_region         \
			   jdb_kern_info_kmem_alloc jdb_kern_info_config  \
			   vkey jdb_thread_names jdb_utcb		  \
			   jdb_entry_frame kdb_ke



boot_info_IMPL		:= boot_info boot_info-ia32-amd64-ux boot_info-ux
config_IMPL		:= config config-ia32-ux config-ux 
context_IMPL		:= context context-ia32-ux context-ux
cpu_IMPL		:= cpu-common cpu-ia32-ux cpu-ux
cpu_lock_IMPL		:= cpu_lock cpu_lock-generic
dirq_IMPL		:= dirq dirq-ia32-ux
entry_frame_IMPL	:= entry_frame entry_frame-ia32-ux                   \
			   entry_frame-abs-timeout-hack
fpu_IMPL		:= fpu fpu-ia32-ux fpu-ux
globals_IMPL		:= globals globals-ia32-ux
irq_IMPL		:= irq irq-ipc irq-ux
jdb_IMPL		:= jdb-ux jdb-ansi jdb-ia32-ux jdb-thread            \
			   jdb-int3 jdb-int3-ia32-ux
jdb_tcb_IMPL		:= jdb_tcb-ia32-ux
jdb_utcb_IMPL		:= jdb_utcb-ia32-ux
jdb_bp_IMPL		:= jdb_bp-ia32-ux jdb_bp-ux
jdb_bt_IMPL		:= jdb_bt-ia32-ux
jdb_entry_frame_IMPL	:= jdb_entry_frame-ia32-ux
jdb_kern_info_IMPL	:= jdb_kern_info jdb_kern_info-ux                    \
			   jdb_kern_info-ia32-ux
jdb_misc_IMPL		:= jdb_misc-ia32-ux
jdb_ptab_IMPL		:= jdb_ptab jdb_ptab-ia32-ux-arm
jdb_screen_IMPL		:= jdb_screen jdb_screen-ia32-ux-arm
jdb_trace_set_IMPL	:= jdb_trace_set jdb_trace_set-ia32-ux
kernel_thread_IMPL	:= kernel_thread kernel_thread-std kernel_thread-ux
kip_init_IMPL		:= kip_init-ia32-amd64-ux kip_init-ux
kmem_IMPL		:= kmem-ia32-ux kmem-ux
kmem_alloc_IMPL		:= kmem_alloc kmem_alloc-ia32-amd64-ux
main_IMPL		:= main-ia32-ux main-ux
mapdb_IMPL		:= mapdb-ia32-ux mapdb
map_util_IMPL		:= map_util map_util-mem map_util-caps
mem_layout_IMPL		:= mem_layout mem_layout-ux
mem_space_IMPL		:= mem_space mem_space-user mem_space-ia32-ux \
			   mem_space-ux 
mem_unit_IMPL		:= mem_unit-ux
paging_IMPL		:= paging paging-ia32-ux
perf_cnt_IMPL		:= perf_cnt perf_cnt-ia32-ux
pic_IMPL		:= pic pic-ux
pmem_alloc_IMPL		:= pmem_alloc pmem_alloc-ia32-ux
space_IMPL		:= space space-caps space-ux 
sys_call_page_IMPL	:= sys_call_page sys_call_page-abs-ux
task_IMPL		:= task task-ux
tb_entry_IMPL		:= tb_entry tb_entry-ia32-ux
terminate_IMPL		:= terminate-ux
thread_IMPL		:= thread thread-ia32-ux thread-ux thread-syscall    \
			   thread-syscall-ia32-ux thread-ipc thread-msg      \
			   thread-msg-ux                                     \
			   thread-pagefault thread-list thread-log           \
			   thread-debug thread-lookup
timer_IMPL 		:= timer timer-ia32-amd64-ux timer-ux
utcb_init_IMPL		:= utcb_init utcb_init-ia32-ux
vmem_alloc_IMPL		:= vmem_alloc vmem_alloc-ia32-amd64-ux \
			   vmem_alloc-ia32-ux vmem_alloc-ux

ASSRC_KERNEL		:= entry-ia32-ux.S entry-ux.S sighandler.S \
			   shortcut-ia32-ux.S

NOOPT			+= $(filter jdb%,\
			     $(foreach in,$(INTERFACES_KERNEL), \
			       $(if $($(in)_IMPL),$($(in)_IMPL),$(in))))
NOOPT			+= tb_entry tb_entry_output

#
# TCBOFFSET subsystem
#
TCBOFFSET		:= tcboffset.h
CXXSRC_TCBOFFSET	:= tcboffset.cc dump_tcboffsets.cc

#
# SYMBOLS subsystem
# 
SYMBOLS			:= Symbols

#
# LINES subsystem
# 
LINES			:= Lines
PROG_LINES		:= genlines

#
# VERSION subsystem
#
VERSION			:= version.h

#
# GBLCFG subsystem
#
GBLCFG			:= gblcfg.o
OBJ_KERNEL		+= gblcfg.o

#
# CXXLIB Subsystem
#
CXXLIB			:= libcxx.a
VPATH			+= lib/cxxlib
INTERFACES_CXXLIB	:= s_cruft paranoia

#
# LIBK subsystem
#
LIBK			:= libk.a
VPATH			+= lib/libk/$(CONFIG_XARCH) lib/libk
PRIVATE_INCDIR		+= lib/libk/$(CONFIG_XARCH) lib/libk
INTERFACES_LIBK		:= atomic lock_guard auto_ptr std_macros observer

#
# LIBAMM subsystem
#
LIBAMM			:= libamm.a
VPATH			+= lib/amm 
PRIVATE_INCDIR		+= lib/amm 
CSRC_LIBAMM		:= amm_alloc_entry.c amm_allocate.c amm_deallocate.c \
			   amm_destroy.c amm_dump.c amm_find_addr.c \
			   amm_find_gen.c amm_free_entry.c amm_init.c \
			   amm_init_gen.c amm_iterate.c amm_iterate_gen.c \
			   amm_join.c amm_modify.c amm_protect.c \
			   amm_reserve.c amm_select.c amm_split.c

#
# LIBDISASM subsystem (only for Jdb)
#
LIBDISASM	:= libdisasm.a
VPATH		+= lib/disasm
PRIVATE_INCDIR	+= lib/disasm
CSRC_LIBDISASM	:= disasm.c i386-dis.c dis-buf.c
NOOPT		+= $(patsubst %.o, %, $(OBJ_LIBDISASM))

#
# LIBPERFCTR subsystem (only for Jdb)
#
LIBPERFCTR	:= libperfctr.a
VPATH		+= lib/perfctr
PRIVATE_INCDIR	+= lib/perfctr
CSRC_LIBPERFCTR	:= event_set_p5.c event_set_p6.c event_set_amd.c \
		   event_set_p4.c event_set.c perfctr.c
NOOPT		+= $(patsubst %.o, %, $(OBJ_LIBPERFCTR))

#
# LIBREGEX subsystem (only for Jdb)
#
LIBREGEX	:= libregex.a
VPATH		+= lib/regex
PRIVATE_INCDIR	+= lib/regex
CSRC_LIBREGEX	:= alloc.c rx.c
NOOPT		+= $(patsubst %.o, %, $(OBJ_LIBREGEX))

ifneq ($(wildcard $(srcdir)/lib/disasm),)
SUBSYSTEMS		+= LIBDISASM
KERNEL_EXTRA_LIBS	+= $(LIBDISASM)
INTERFACES_KERNEL	+= jdb_disasm
endif

ifneq ($(wildcard $(srcdir)/lib/perfctr),)
  SUBSYSTEMS		+= LIBPERFCTR
  KERNEL_EXTRA_LIBS	+= $(LIBPERFCTR)
  KERNEL_UNRES_SYMS	+= -u perfctr_set_cputype
endif

ifneq ($(wildcard $(srcdir)/lib/regex),)
SUBSYSTEMS		+= LIBREGEX
KERNEL_EXTRA_LIBS	+= $(LIBREGEX)
INTERFACES_KERNEL	+= jdb_regex
endif

#
# UNITTEST subsystem
#
SUBSYSTEMS		+= UNITTEST
VPATH			+= test/unit

INTERFACES_UNITTEST	+= mapdb_t map_util_t

# Compile all unit tests without -DNDEBUG.
NONDEBUG += $(patsubst %.o, %, $(OBJ_UNITTEST))
