# -*- makefile -*-

###############################################################################


SUBSYSTEMS := 	ABI LIBAMM KERNEL LIBK DRIVERS MINILIBC \
		CXXLIB VERSION JABI TCBOFFSET


PREPROCESS_PARTS 	+= arch $(CONFIG_ABI) 32bit $(CONFIG_XARCH) serial   \
                           h3800

ifeq ("$(CONFIG_LIST_ALLOC_SANITY)","y")
  PREPROCESS_PARTS	+= list_alloc_debug
endif

ifeq ("$(CONFIG_KDB)","y")
  PREPROCESS_PARTS	+= debug gdb 
endif
ifeq ("$(CONFIG_JDB)","y")
  PREPROCESS_PARTS	+= debug jdb 
endif
ifeq ("$(CONFIG_JDB_THREAD_NAMES)","y")
  PREPROCESS_PARTS	+= jdb_thread_names
endif
ifeq ("$(CONFIG_SYSCALL_ITER)","y")
  PREPROCESS_PARTS	+= syscall_iter
endif

ifeq ("$(CONFIG_PF_XSCALE)","y")
  PREPROCESS_PARTS	  += pxa 16550
  CONFIG_KERNEL_LOAD_ADDR := 0xa0000000
endif

ifeq ("$(CONFIG_PF_SA1100)","y")
  PREPROCESS_PARTS        += sa1100
  CONFIG_KERNEL_LOAD_ADDR := 0xc0000000
endif

ifeq ("$(CONFIG_PF_ISG)","y")
  PREPROCESS_PARTS	  += isg 926
  CONFIG_KERNEL_LOAD_ADDR := 0xc0000000
endif

#
# TYPES subsystem
#

PRIVATE_INCDIR += types/$(CONFIG_XARCH) types


#
# DRIVERS Subsystem
#
DRIVERS 		:= libdrivers.a libgluedriverslibc.a
VPATH			+= drivers/$(CONFIG_XARCH) drivers
PRIVATE_INCDIR		+= drivers/$(CONFIG_XARCH) drivers
INTERFACES_DRIVERS 	:= sa1100 mux_console console uart filter_console \
			   gdb_server h3xxx io mmu reset
io_IMPL			:= io io-arm
mmu_IMPL		:= mmu mmu-arm
uart_IMPL		:= uart uart-sa1100 uart-16550
reset_IMPL		:= reset-arm
CXXSRC_DRIVERS		:= glue_libc.cc
NOOPT			+= $(patsubst %.o, %, $(OBJ_DRIVERS))

#
# MINILIBC Subsystem
#
MINILIBC	:= libc.a
VPATH		+= lib/minilibc/$(CONFIG_XARCH) lib/minilibc
PRIVATE_INCDIR	+= lib/minilibc/$(CONFIG_XARCH)/include lib/minilibc/include
CSRC_MINILIBC	:= atexit.c memccpy.c memcmp.c memmove.c memset.c memcpy.c \
		   memchr.c \
		   panic.c strchr.c strcmp.c strcpy.c strlen.c strncmp.c \
		   strncpy.c strstr.c __assert_fail.c printf.c __v_printf.c \
		   vprintf.c strtol.c strtoul.c __lltostr.c \
		   __ltostr.c putchar.c puts.c getchar.c gets.c __v_scanf.c \
		   vsscanf.c sscanf.c construction.c sprintf.c snprintf.c \
		   vsnprintf.c vsprintf.c longjmp.c \
		   isalnum.c isalpha.c isascii.c isblank.c \
		   iscntrl.c isdigit.c isgraph.c islower.c isprint.c \
		   ispunct.c isspace.c isupper.c isxdigit.c \
		   strspn.c strcspn.c tolower.c

ASSRC_MINILIBC	:= setjmp.S
NOOPT		+= $(patsubst %.o, %, $(OBJ_MINILIBC))


#
# LIBAMM subsystem
#
LIBAMM		:= libamm.a
VPATH		+= lib/amm
PRIVATE_INCDIR	+= lib/amm
CSRC_LIBAMM	:= amm_alloc_entry.c amm_allocate.c amm_deallocate.c amm_destroy.c \
		   amm_dump.c amm_find_addr.c amm_find_gen.c amm_free_entry.c \
		   amm_init.c amm_init_gen.c amm_iterate.c amm_iterate_gen.c \
		   amm_join.c amm_modify.c amm_protect.c amm_reserve.c \
		   amm_select.c amm_split.c


#
# JABI Subsystem
#
JABI			:= libjabi.a
VPATH			+= jabi/$(CONFIG_XARCH) jabi
INTERFACES_JABI		:= jdb_ktrace


#
# ABI Subsystem
#

ABI 		:= libabi.a
VPATH 		+= abi/$(CONFIG_XARCH) abi 

INTERFACES_ABI 	:= kip l4_types utcb

l4_types_IMPL 	:= l4_types l4_types-32bit l4_types-iofp l4_types-debug

# x0!=32Bit UIDs
kip_IMPL	:= kip kip-arm


#
# KERNEL subsystem
#
KERNEL 		:= fiasco
KERNEL_EXTRA 	:= Symbols
VPATH 		+= kern/$(CONFIG_XARCH) kern
PRIVATE_INCDIR 	+= kern/$(CONFIG_XARCH) kern

INTERFACES_KERNEL := 	allocators kmem boot_info __main globals config main \
			kernel_uart pagetable kern_types mem_layout \
			mapped_alloc kmem_alloc kip_init kmem_space \
			mem_unit boot_uart_init kernel_console cpu \
			thread paging vmem_alloc kdb_ke terminate \
			cpu_lock irq sender startup \
			entry_frame irq_alloc helping_lock switch_lock \
			kmem_slab_simple region kmem_slab slab_cache_anon \
			thread_state context sched_context \
			fpu fpu_state mapdb map_util space space_index \
			space_index_util task thread_lock receiver timer \
			timeout ipc_timeout deadline_timeout timeslice_timeout \
			dirq fpu_alloc long_msg kernel_thread pic cmdline \
			activation \
			preemption k_sa1100 list_alloc trap_state warn \
			bootstrap virq uart_console vkey kern_lib_page


boot_info_IMPL	  	:= boot_info boot_info-arch
config_IMPL	  	:= config config-arm
context_IMPL	  	:= context context-arm
cpu_IMPL	  	:= cpu-arm
cpu_lock_IMPL  	  	:= cpu_lock cpu_lock-generic
dirq_IMPL		:= dirq dirq-arm
entry_frame_IMPL  	:= entry_frame entry_frame-arm                       \
			   entry_frame-abs-timeout-hack
globals_IMPL	  	:= globals globals-arch
irq_IMPL		:= irq irq-generic irq-ipc
kernel_thread_IMPL	:= kernel_thread kernel_thread-std
kernel_uart_IMPL  	:= kernel_uart kernel_uart-sa1100
mapdb_IMPL		:= mapdb-arm mapdb
mem_layout_IMPL		:= mem_layout mem_layout-arm
kernel_thread_IMPL	:= kernel_thread kernel_thread-std kernel_thread-arm
kmem_alloc_IMPL		:= kmem_alloc kmem_alloc-arm
pagetable_IMPL	  	:= pagetable pagetable-arch
paging_IMPL	  	:= paging paging-arch
pic_IMPL		:= pic pic-sa1100
space_IMPL		:= space space-user
startup_IMPL		:= startup startup-arm
thread_IMPL	  	:= thread thread-list thread-arm thread-syscall \
			   thread-jdb thread-ipc thread-msg thread-msg-arm \
			   thread-pagefault 
timer_IMPL		:= timer timer-arm
vmem_alloc_IMPL	  	:= vmem_alloc vmem_alloc-arch

ifeq ("$(CONFIG_PF_ISG)","y")
  VPATH	+= kern/arm/isg drivers/arm/isg
  # DRIVERS
  uart_IMPL		+= uart-isg

  # KERNEL
  config_IMPL		+= config-arm-isg
  main_IMPL		:= main main-isg
  mem_layout_IMPL	+= mem_layout-isg
  pic_IMPL		+= pic-isg
  bootstrap_IMPL	:= bootstrap bootstrap-isg
  timer_IMPL		+= timer-arm-isg
endif


JDB_INTERFACES		:= jdb_handler_queue jdb_module jdb_pic            \
			   jdb jdb_core jdb_prompt_ext                     \
                           jdb_prompt_module jdb_exit_module jdb_kern_info \
			   jdb_tcb jdb_screen jdb_thread_list jdb_input    \
			   jdb_symbol push_console                         \
			   jdb_timeout jdb_dump jdb_ptab                   \
			   jdb_attach_irq jdb_table                        \
			   jdb_kern_info_kmem_alloc jdb_kern_info_region   \
			   jdb_kern_info_kip jdb_mapdb

			   
JDB_TBUF_IFS		:= jdb_tbuf jdb_tbuf_init jdb_tbuf_output          \
			   jdb_tbuf_show jdb_tbuf_events                   \
			   tb_entry tb_entry_output

GDB_INTERFACES          := gdb


ifeq ("$(CONFIG_JDB_THREAD_NAMES)","y")
JDB_INTERFACES		+= jdb_thread_names
endif

ifeq ("$(CONFIG_JDB)","y")
INTERFACES_KERNEL 	+= $(JDB_INTERFACES) $(DBG_INTERFACES)
jdb_IMPL		:= jdb jdb-arm jdb-ansi jdb-thread
jdb_kern_info_IMPL	:= jdb_kern_info jdb_kern_info-arm
jdb_dump_entry_frame_IMPL:= jdb_dump_entry_frame-arm
jdb_tcb_IMPL		:= jdb_tcb jdb_tcb-arm
jdb_ptab_IMPL		:= jdb_ptab jdb_ptab-arm
thread_IMPL		+= thread-debug 
endif

ifeq ("$(CONFIG_KDB)","y")
INTERFACES_KERNEL 	+= $(GDB_INTERFACES) $(DBG_INTERFACES)
gdb_IMPL		:= gdb gdb-arm
endif

CXXSRC_KERNEL		:= kernel_panic.cc 
ASSRC_KERNEL	  	:= ivt.S

NOOPT			+= $(filter jdb%,\
			     $(foreach in,$(INTERFACES_KERNEL), \
			       $(if $($(in)_IMPL),$($(in)_IMPL),$(in))))
NOOPT			+= tb_entry tb_entry_output


#INTERFACES_KERNEL = boot_info __main mapdb region \
#  space_context space space_index space_index_util \
#  stack kmem kmem_alloc slab_cache_anon kmem_slab_simple kmem_slab \
#  switch_lock thread_lock helping_lock kernel_lock timer \
#  thread_state sched context threadid thread_regs sender receiver \
#  thread kernel_thread thread_util \
#  map_util irq dirq virq console paranoia globals \
#  checksum main config

#
# CRT0 subsystem
#
CRT0 		:= crt0.o
CSRC_CRT0	:= atest.c
#ASSRC_CRT0 	:= crt0.S


#
# CXXLIB Subsystem
# 
CXXLIB 			:= libcxx.a
VPATH			+= lib/cxxlib
INTERFACES_CXXLIB 	:= paranoia s_cruft

#
# LIBK subsystem
#
LIBK 		:= libk.a
VPATH          	+= lib/libk/$(CONFIG_XARCH) lib/libk
PRIVATE_INCDIR 	+= lib/libk/$(CONFIG_XARCH) lib/libk

#INTERFACES_LIBK:= atomic lock_guard profile uuencode gmon unistd panic auto_ptr
INTERFACES_LIBK := std_macros atomic lock_guard auto_ptr observer
atomic_IMPL     := atomic atomic-arm-up

#
# VERSION subsystem
#
VERSION		:= version.h

TCBOFFSET	:= tcboffset.h
CXXSRC_TCBOFFSET	:= tcboffset.cc dump_tcboffsets.cc
