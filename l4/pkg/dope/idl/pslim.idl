/*
 * \brief   IDL interface to pSLIM widget server
 * \date    2002-11-25
 * \author  Norman Feske <nf2@inf.tu-dresden.de>
 */

/*
 * Copyright (C) 2002-2003  Norman Feske  <nf2@os.inf.tu-dresden.de>
 * Technische Universitaet Dresden, Operating Systems Research Group
 *
 * This file is part of the DOpE package, which is distributed under
 * the  terms  of the  GNU General Public Licence 2.  Please see the
 * COPYING file for details.
 */

typedef struct pslim_rect {
  short x, y;
  unsigned short w, h;
} pslim_rect_t;

typedef unsigned long pslim_color_t;

interface dope_pslim {

      /**************************************************************/
      /*!
       * \brief fill rectangular area of virtual framebuffer with color
       *
       * \param  rect   vfb area info
       * \param  color  fill color
       *
       * \return 0 for success
       **************************************************************/
      long fill([in] pslim_rect_t rect,[in] pslim_color_t color);

      /**************************************************************/
      /*!
       * \brief copy rectangular area of virtual framebuffer to (dx,dy)
       *
       * \param  rect   vfb area info
       * \param  dx     destination x coordinate (may be negative)
       * \param  dy     dito for y coordinate
       *
       * \return 0 for success
       **************************************************************/
      long copy([in] pslim_rect_t rect,[in] short dx,[in] short dy);

      /**************************************************************/
      /*!
       * \brief set rectangular area of virtual framebuffer with 
       *	foreground and background color mask in bitmap
       *
       * \param  rect         vfb area info
       * \param  fg_color     foreground color
       * \param  bg_color     background color
       * \param  bmap         mask as bitmap
       * \param  bmap_type    type of bitmap: starting most or least 
       *                      significant bit (START_MSB/_LSB)
       *
       * \return 0 for success
       **************************************************************/
      long bmap([in] pslim_rect_t rect,
                [in] pslim_color_t fg_color,
                [in] pslim_color_t bg_color,
                [in,ref,size_is(bmap_size)] byte *bmap,
                [in] long bmap_size,
                [in] long bmap_type);

      /**************************************************************/
      /*!
       * \brief Set rectangular area of virtual framebuffer with color
       *        in pixelmap
       *
       * \param  rect   vfb area info
       * \param  pmap   pixmap
       *
       * \return 0 for success
       **************************************************************/
      long set([in] pslim_rect_t rect,
               [in, ref, size_is(pmap_size), max_is(100000)] char *pmap,
               [in] int pmap_size);

      /**************************************************************/
      /*!
       * \brief convert pixmap from YUV to RGB color space, scale and 
       *        set rectangular area of virtual framebuffer
       *
       * \param  rect       vfb area info
       * \param  yuv        pixmap in YUV color space
       * \param  yuv_type   type of pixmap's YUV encoding
       * \param  scale      scale pixmap (defaults to 1) (NOT 
       *                    SUPPORTED YET)
       *
       * \return 0 for success
       **************************************************************/
      long cscs([in] pslim_rect_t rect,
                [in, ref, size_is(yuv_size), max_is(100000)] char  *yuv,
                [in] int yuv_size,
                [in] long yuv_type,
                [in] char scale);

      /**************************************************************/
      /*!
       * \brief put string at x, y
       *
       * \param  s      string
       * \param  x      destination x coordinate
       * \param  y      dito for y coordinate
       *
       * \return 0 for success,
       **************************************************************/
      long puts([in, string] char *s,
                [in] short x,
                [in] short y,
                [in] pslim_color_t fg_color,
                [in] pslim_color_t bg_color);

      /**************************************************************/
      /*!
       * \brief put string at x, y
       *
       * \param  s      string
       * \param  x      destination x coordinate
       * \param  y      dito for y coordinate
       *
       * \return 0 for success,
       **************************************************************/
      long puts_attr([in, ref, size_is(strattr_size)] char *s,
                     [in] int strattr_size,
                     [in] short x,
                     [in] short y);

};

