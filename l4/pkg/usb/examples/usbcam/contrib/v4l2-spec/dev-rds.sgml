     <title>RDS Interface</title>

      <para>The Radio Data System transmits supplementary
information in binary format, for example the station name or travel
information, on a inaudible audio subcarrier of a radio program. This
interface aims at devices capable of receiving and decoding RDS
information.</para>

      <para>The V4L API defines its RDS API as follows.</para>

      <para>From radio devices supporting it, RDS data can be read
with the &func-read; function. The data is packed in groups of three,
as follows:<orderedlist>
      <listitem>
	<para>First Octet Least Significant Byte of RDS Block</para>
      </listitem>
      <listitem>
	<para>Second Octet Most Significant Byte of RDS Block</para>
      </listitem>
      <listitem>
	<para>Third Octet Bit 7: Error bit. Indicates that an
uncorrectable error occurred during reception of this block. Bit 6:
Corrected bit. Indicates that an error was corrected for this data
block. Bits 5-3: Received Offset. Indicates the offset received by the
sync system. Bits 2-0: Offset Name. Indicates the offset applied to
this data.</para>
      </listitem>
	</orderedlist></para>

      <para>It was argued <!-- video4linux-list@redhat.com
on 12 Nov 2002, subject "RDS/RBDS" --> the RDS API should be
extended before integration into V4L2, no new API has been devised yet.
Please write to the linux-media mailing list for discussion: &v4l-ml;.
Meanwhile no V4L2 driver should set the
<constant>V4L2_CAP_RDS_CAPTURE</constant> capability flag.</para>


<!--
Local Variables:
mode: sgml
sgml-parent-document: "v4l2.sgml"
indent-tabs-mode: nil
End:
 -->
