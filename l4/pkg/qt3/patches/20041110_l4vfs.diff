Index: idl/basic_io.idl
===================================================================
RCS file: /home/cvs/l4/pkg/l4vfs/idl/basic_io.idl,v
retrieving revision 1.7
diff -u -r1.7 basic_io.idl
--- idl/basic_io.idl	29 Oct 2004 14:47:14 -0000	1.7
+++ idl/basic_io.idl	10 Nov 2004 20:23:11 -0000
@@ -36,6 +36,9 @@
         int             stat([in] object_id_t object_id,
                              [out] l4vfs_stat_t * buf);
 
+        int             fstat([in] object_handle_t handle,
+                              [out] l4vfs_stat_t * buf);
+
         int             access([in] object_id_t file,
                                [in] int mode);
     };
Index: include/basic_io.h
===================================================================
RCS file: /home/cvs/l4/pkg/l4vfs/include/basic_io.h,v
retrieving revision 1.7
diff -u -r1.7 basic_io.h
--- include/basic_io.h	29 Oct 2004 14:47:15 -0000	1.7
+++ include/basic_io.h	10 Nov 2004 20:23:11 -0000
@@ -40,9 +40,13 @@
                                l4vfs_dirent_t *dirp,
                                l4_uint32_t count);
 
-l4_int32_t l4vfs_stat(l4_threadid_t server,
-                      object_id_t object_id,
-                      l4vfs_stat_t * buf);
+l4_int32_t	l4vfs_stat(l4_threadid_t server,
+            		   object_id_t object_id,
+                	   l4vfs_stat_t * buf);
+
+l4_int32_t	l4vfs_fstat(l4_threadid_t server,
+            		    object_handle_t fd,
+                	    l4vfs_stat_t * buf);
 
 l4_int32_t      l4vfs_access(l4_threadid_t server,
                              object_id_t object_id,
Index: lib/client/basic_io.c
===================================================================
RCS file: /home/cvs/l4/pkg/l4vfs/lib/client/basic_io.c,v
retrieving revision 1.7
diff -u -r1.7 basic_io.c
--- lib/client/basic_io.c	29 Oct 2004 14:47:16 -0000	1.7
+++ lib/client/basic_io.c	10 Nov 2004 20:23:11 -0000
@@ -104,6 +104,20 @@
                                     &_dice_corba_env);
 }
 
+l4_int32_t l4vfs_fstat(l4_threadid_t server,
+                       object_handle_t fd,
+                       l4vfs_stat_t * buf)
+{
+    CORBA_Environment _dice_corba_env = dice_default_environment;
+    _dice_corba_env.malloc = (dice_malloc_func)malloc;
+    _dice_corba_env.free = (dice_free_func)free;
+
+    return l4vfs_basic_io_fstat_call(&server,
+                                     fd,
+                                     buf,
+                                     &_dice_corba_env);
+}
+
 l4_int32_t l4vfs_access(l4_threadid_t server,
 			object_id_t object_id,
 			l4_int32_t mode)
Index: lib/server/stat.c
===================================================================
RCS file: /home/cvs/l4/pkg/l4vfs/lib/server/stat.c,v
retrieving revision 1.2
diff -u -r1.2 stat.c
--- lib/server/stat.c	28 Oct 2004 13:19:57 -0000	1.2
+++ lib/server/stat.c	10 Nov 2004 20:23:11 -0000
@@ -30,3 +30,20 @@
     LOG("weak stat; just returning -EBADF");
     return -EBADF;
 }
+
+l4_int32_t
+l4vfs_basic_io_fstat_component(CORBA_Object _dice_corba_obj,
+                               object_handle_t fd,
+                               l4vfs_stat_t *buf,
+                               CORBA_Server_Environment *_dice_corba_env)
+    __attribute__((weak));
+
+l4_int32_t
+l4vfs_basic_io_fstat_component(CORBA_Object _dice_corba_obj,
+                               object_handle_t fd,
+                               l4vfs_stat_t *buf,
+                               CORBA_Server_Environment *_dice_corba_env)
+{
+    LOG("weak fstat; just returning -EBADF");
+    return -EBADF;
+}
Index: simple_file_server/server/basic_io.c
===================================================================
RCS file: /home/cvs/l4/pkg/l4vfs/simple_file_server/server/basic_io.c,v
retrieving revision 1.16
diff -u -r1.16 basic_io.c
--- simple_file_server/server/basic_io.c	29 Oct 2004 14:47:16 -0000	1.16
+++ simple_file_server/server/basic_io.c	10 Nov 2004 20:23:13 -0000
@@ -170,6 +170,113 @@
     return ret;
 }
 
+int clientstate_stat(l4vfs_stat_t *buf, l4_threadid_t client,
+                     local_object_id_t object_id)
+{
+    int ret;
+    simple_file_t *s_file;
+
+    // check some error conditions
+    LOGd(_DEBUG, "2");
+    if (object_id < 0)
+        return -ENOENT;
+
+    if (object_id == 0)
+    { 
+        /* root directory */
+	buf->st_dev   = SIMPLE_FILE_SERVER_VOLUME_ID;
+	buf->st_ino   = object_id;
+        buf->st_mode  = S_IFDIR | S_IRWXU | S_IRWXG | S_IRWXO;
+	buf->st_nlink = 1;		    
+	buf->st_size  = 0;
+        ret = 0;
+    }
+    else
+    {   /* object id not allowed */
+        if (arraylist->get_elem(files,object_id - 1) == NULL)
+        {
+            return -ENOENT;
+        }
+
+        /* get file from list */
+        s_file = (simple_file_t *) arraylist->get_elem(files,object_id - 1);
+
+        /* should not happen every entry needs a name */
+        if (s_file->name == NULL)
+            return -ENOENT;
+        LOGd(_DEBUG,"file_name: %s",s_file->name);
+
+        /* Okay, file exists. Now let's have a look at 'mode':
+	   there are only files left, as we do not support subdirectories,
+	   so we allow everything except for executing */
+	buf->st_dev   = SIMPLE_FILE_SERVER_VOLUME_ID;
+	buf->st_ino   = object_id;
+        buf->st_mode  = S_IFREG | S_IRUSR | S_IWUSR | 
+			S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH;
+	buf->st_nlink = 1;		    
+	buf->st_size  = s_file->length;
+        ret = 0;
+    }
+    
+    return ret;
+}
+
+int clientstate_fstat(object_handle_t fd, l4vfs_stat_t *buf,
+		      l4_threadid_t client)
+{
+    int ret;
+    local_object_id_t oid;
+    simple_file_t *s_file;
+
+    LOGd(_DEBUG, "fd = %d, buf = %p", fd, buf);
+    // check errors
+    if (fd < 0 || fd >= MAX_CLIENTS)
+        return -EBADF;
+    if (clients[fd].open == false)
+        return -EBADF;
+
+    /* get file from list */
+    oid = clients[fd].object_id;
+    if (oid == 0)
+    {
+        /* root directory */
+	buf->st_dev   = SIMPLE_FILE_SERVER_VOLUME_ID;
+	buf->st_ino   = oid;
+        buf->st_mode  = S_IFDIR | S_IRWXU | S_IRWXG | S_IRWXO;
+	buf->st_nlink = 1;
+	buf->st_size  = 0;
+        ret = 0;
+    }
+    else
+    {   /* object id not allowed */
+        if (arraylist->get_elem(files,oid - 1) == NULL)
+        {
+            return -ENOENT;
+        }
+
+        /* get file from list */
+        s_file = (simple_file_t *) arraylist->get_elem(files,oid - 1);
+
+        /* should not happen every entry needs a name */
+        if (s_file->name == NULL)
+            return -ENOENT;
+        LOGd(_DEBUG,"file_name: %s",s_file->name);
+
+        /* Okay, file exists. Now let's have a look at 'mode':
+	   there are only files left, as we do not support subdirectories,
+	   so we allow everything except for executing */
+	buf->st_dev   = SIMPLE_FILE_SERVER_VOLUME_ID;
+	buf->st_ino   = oid;
+        buf->st_mode  = S_IFREG | S_IRUSR | S_IWUSR | 
+			S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH;
+	buf->st_nlink = 1;		    
+	buf->st_size  = s_file->length;
+        ret = 0;
+    }
+    
+    return ret;
+}
+
 int clientstate_read(object_handle_t fd, l4_int8_t * buf, size_t count)
 {
     int ret;
Index: simple_file_server/server/basic_io.h
===================================================================
RCS file: /home/cvs/l4/pkg/l4vfs/simple_file_server/server/basic_io.h,v
retrieving revision 1.7
diff -u -r1.7 basic_io.h
--- simple_file_server/server/basic_io.h	29 Oct 2004 14:47:16 -0000	1.7
+++ simple_file_server/server/basic_io.h	10 Nov 2004 20:23:13 -0000
@@ -33,6 +33,8 @@
 int clientstate_open(int flags, l4_threadid_t client, local_object_id_t object_id);
 int clientstate_close(int handle, l4_threadid_t client);
 int clientstate_access(int mode, l4_threadid_t client, local_object_id_t object_id);
+int clientstate_stat(l4vfs_stat_t *buf, l4_threadid_t client, local_object_id_t object_id);
+int clientstate_fstat(object_handle_t fd, l4vfs_stat_t *buf, l4_threadid_t client);
 int clientstate_read(object_handle_t fd, l4_int8_t * buf, size_t count);
 int clientstate_write(object_handle_t fd, const l4_int8_t * buf, size_t count);
 int clientstate_seek(object_handle_t fd, off_t offset, int whence);
Index: simple_file_server/server/main.c
===================================================================
RCS file: /home/cvs/l4/pkg/l4vfs/simple_file_server/server/main.c,v
retrieving revision 1.16
diff -u -r1.16 main.c
--- simple_file_server/server/main.c	29 Oct 2004 14:47:16 -0000	1.16
+++ simple_file_server/server/main.c	10 Nov 2004 20:23:13 -0000
@@ -80,6 +80,37 @@
 
 
 l4_int32_t
+l4vfs_basic_io_stat_component(CORBA_Object _dice_corba_obj,
+                              const object_id_t *object_id,
+			      l4vfs_stat_t *buf,
+                              CORBA_Server_Environment *_dice_corba_env)
+{
+    int ret;
+
+    if (object_id->volume_id != my_volume_id)
+        return -ENOENT;
+    ret = clientstate_stat(buf, *_dice_corba_obj,
+			   object_id->object_id);
+
+    return ret;
+}
+											  
+
+l4_int32_t
+l4vfs_basic_io_fstat_component(CORBA_Object _dice_corba_obj,
+                               object_handle_t object_handle,
+			       l4vfs_stat_t *buf,
+                               CORBA_Server_Environment *_dice_corba_env)
+{
+    int ret;
+
+    ret = clientstate_fstat(object_handle, buf, *_dice_corba_obj);
+
+    return ret;
+}
+											  
+
+l4_int32_t
 l4vfs_basic_io_access_component(CORBA_Object _dice_corba_obj,
                                 const object_id_t *object_id,
                                 l4_int32_t mode,
