/* -*- c -*- */

/**
\mainpage Generic Block Interface Reference Manual

\section content Contents

- \ref intro
  - \ref intro_idl
  - \ref intro_client 
  - \ref intro_server
- \htmlonly<a href="group__api.html">\endhtmlonly 
  Client Library API Documentation
  \htmlonly</a>\endhtmlonly
  - \htmlonly<a href="group__api__driver.html">\endhtmlonly
    Open/Close Driver Instances
    \htmlonly</a>\endhtmlonly
  - \htmlonly<a href="group__api__stream.html">\endhtmlonly
    Create/Close/Start Real-Time Streams
    \htmlonly</a>\endhtmlonly
  - \htmlonly<a href="group__api__cmd.html">\endhtmlonly
    Block Requests
    \htmlonly</a>\endhtmlonly
  - \htmlonly<a href="group__api__ctrl.html">\endhtmlonly
    Driver Setup
    \htmlonly</a>\endhtmlonly
  - \htmlonly<a href="group__api__init.html">\endhtmlonly
    Initialization
    \htmlonly</a>\endhtmlonly
- \htmlonly<a href="group__idl.html">\endhtmlonly IDL Interface 
  Documentation\htmlonly</a>\endhtmlonly
  - \htmlonly<a href="group__idl__driver.html">\endhtmlonly
    Driver Interface
    \htmlonly</a>\endhtmlonly
  - \htmlonly<a href="group__idl__cmd.html">\endhtmlonly
    Request Interface
    \htmlonly</a>\endhtmlonly
  - \htmlonly<a href="group__idl__wait.html">\endhtmlonly
    Notification Interface
    \htmlonly</a>\endhtmlonly

\section intro Introduction

The Generic Block Interface provides the interface used by DROPS block device 
drivers. The interface provides both best-effort and real-time (stream) block 
requests.

\section intro_idl IDL Interface

The Generic Block IDL interface is an asynchronous interface. That means 
clients do not block until a request is processed by a driver. Instead, clients
immediately return after sending the request to a driver and get a notification  
if a request is processed at a later time. The Generic Block Interface consists 
of three IDL interfaces, a \htmlonly<a href="group__idl__cmd.html">\endhtmlonly
Request Interface\htmlonly</a>\endhtmlonly to send requests to a driver, a 
\htmlonly<a href="group__idl__wait.html">\endhtmlonly
Notification Interface\htmlonly</a>\endhtmlonly to wait for a notification from 
a driver and a \htmlonly<a href="group__idl__driver.html">\endhtmlonly
Driver Interface \htmlonly</a>\endhtmlonly to setup the other interfaces.

\section intro_client Client Library

The client library (libgeneric_blk) implements several functions to use 
block device drivers. In particular, it implements a mechanism to wait for
the notifications from a driver. The library uses a separate thread to wait 
for the notifications from a driver and notifies the client by either executing
a callback function or incrementing a semaphore which both can be specified 
by the client. The same mechanism is used by the library to provide a
synchronous request function. 

\section intro_server Server Library

The server library (libgeneric_blk-server) provides the skeleton functions 
generated by the IDL compiler which must be used to implement a block device
driver.

*/
