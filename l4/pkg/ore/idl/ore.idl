#include <l4/sys/types.h>
#include <l4/dm_generic/types.h>
#include <l4/ore/ore-types.h>

library ore
{
    [uuid(1)]
    interface ore
    {
        /* open a connection to ORe 
         *
         * \param device_name device name
         * \param mac         MAC address
         * \param send_ds     dataspace for send buffers
         * \param recv_ds     dataspace for recv buffers
         * \param flags       flags for this connection
         */
        l4ore_handle_t open(   	[in, string] char *         device_name,
                                [out] unsigned char         mac[6],
                                [in] l4dm_dataspace_t       send_ds,
                                [in] l4dm_dataspace_t       recv_ds,
                                [in,out] l4ore_config *     config
                            );

        /* Close a connection.
         *
         * \param handle        connection handle
         */
        void close([in] l4ore_handle_t handle);

        /* send a buffer over an established connection using string IPC 
         *
         * \param channel		dedicated ORe channel
         * \param buf			data to send
         * \param size			size of buf
         * \param tx_blocking   ORE_BLOCKING_CALL for blocking rx,
         *                      ORE_NONBLOCKING_CALL for non-blocking rx
         */
        [allow_reply_only]
        int send(   [in] l4ore_handle_t                         channel,
                    [in,ref,size_is(size), max_is(2000)] char * buf,
                    [in] l4_umword_t                            size,
                    [in] int                                    tx_blocking
                    );
         
        /* receive data over an established connection using string IPC
	     *
         * \param channel		dedicated ORe channel
         * \param buf			data to send
         * \param size			size of rx buf
         * \param real_size     if buf is too small, the size really needed
         *                      to receive the packet
         * \param rx_blocking   ORE_BLOCKING_CALL for blocking rx,
         *                      ORE_NONBLOCKING_CALL for non-blocking rx
         */
        [allow_reply_only]
        int recv(	[in] l4ore_handle_t                         channel,
                    [out,prealloc,ref,size_is(size), max_is(2000)] char **  buf,
                    [in,out] l4_umword_t *                      size,
                    [out] l4_umword_t *                         real_size,
                    [in] int                                    rx_blocking
                    );    
                    
        /* configure connection */
        void configure( [in] l4ore_handle_t     channel,
                        [in] l4ore_config       new_conf,
                        [out] l4ore_config *    old_conf
                        );
    };
};
