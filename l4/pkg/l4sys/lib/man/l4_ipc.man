.\"Warning: don't edit this file. It has been generated by typeset
.\" The next compilation will silently overwrite all changes.
.TH "l4_ipc" 1 "16.07.96" "Institut" "User Commands"
.SH NAME
 l4_ipc \- Overview over IPC in L4

.SH " Description"
Ipc in L4 is always synchronous and unbuffered: a message is
transferred from the sender to the recipient if and only if the
recipient has invoked a corresponding ipc operation. The sender blocks
until this happens or a timeout specified by the sender elapsed
without the destination becoming ready to receive.
.PP
Ipc can be used to copy data as well as to map or grant fpages from
the sender to the recipient.
.PP
It currently comprises 7 calls:
.IP "\fBl4_i386_ipc_call()\fP"
The usual blocking RPC.
.IP "\fBl4_i386_receive()\fP"
Wait for a message from a specified thread.
.IP "\fBl4_i386_reply_and_wait()\fP"
Send a message to a client and
wait for the next order from a client.
.IP "\fBl4_i386_reply_deceiting_and_wait()\fP"
Send a message to a
client (using a virtual sender id) and wait for the next order from a client.
.IP "\fBl4_i386_send()\fP"
Send a message and continue.
.IP "\fBl4_i386_send_deceiting()\fP"
Send a message using a virtual
sender id.
.IP "\fBl4_i386_wait()\fP"
Wait for a message from any thread.
.SH "See Also"
 l4_i386_ipc_call ,  l4_i386_ipc_receive ,  l4_i386_ipc_reply_and_wait ,  l4_i386_ipc_reply_deceiting_and_wait ,  l4_i386_ipc_send ,  l4_i386_ipc_send_deceiting , l4_i386_ipc_wait  
