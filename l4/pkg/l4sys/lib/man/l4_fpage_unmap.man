.\"Warning: don't edit this file. It has been generated by typeset
.\" The next compilation will silently overwrite all changes.
.TH "l4_fpage_unmap" 1 "27.06.96" "Institut" "User Commands"
.SH NAME
 l4_fpage_unmap \-  unmap an L4 flex page

.SH " Synopsis"
.nf
\fB#include <l4/sys/syscalls.h>\fP
.fi
.PP
\fBstatic inline void\fP 
.br
\fBl4_fpage_unmap(l4_fpage_t \fP\fIfpage\fP,\fBl4_umword_t \fP\fImap_mask\fP\fB);\fP

.SH " Description"
The \fBl4_fpage_unmap()\fP system call unmaps the specified flex page
in all address spaces into which the invoker mapped it directly or
indirectly.
.SH " Arguments"
.IP "\fIfpage\fP"
Fpage to be unmapped.
.IP "\fImap_mask\fP"
The following values are possible and can be combined partially:
.RS
.IP "\fBL4_FP_REMAP_PAGE\fP"
The flex page is set to read\-only. 
.IP "\fBL4_FP_FLUSH_PAGE\fP"
The flex page is completely unmapped.
.IP "\fBL4_FP_OTHER_SPACES\fP"
The flex page is unmapped in all address spaces into which it has been
mapped. The original flex page remains mapped.
.IP "\fBL4_FP_ALL_SPACES\fP"
The flex page is unmapped everywhere, including the original page.
.RE
.SH "Return Values"
No return value is sent back.
.SH "See Also"
 l4_thread_ex_regs ,  l4_myself ,  l4_nchief ,  l4_thread_switch ,  l4_thread_schedule ,  l4_task_new  
