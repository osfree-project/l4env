<!-- -*-jfw-sgml-*- -->
<!doctype manpage public "-//JFW//DTD Manpage//EN">

<manpage
sect=syscall
date="16.07.96"
>
l4_i386_ipc_send_deceiting
<short>deceite send operation
<sect> Synopsis

<verb>#include <l4/sys/ipc.h></verb>

<code/static inline int/ <nl>
<code/l4_i386_ipc_send_deceiting(l4_ipc_deceit_ids_t/ <var/ids/
<code/, const void/ <var/*snd_msg/ <code/, dword_t/ <var/snd_dword0/
<code/, dword_t/ <var/snd_dword1/ <code/l4_timeout_t/ <var/timeout/
<code/, l4_msgdope_t/ <var/*result/ <code/);/

<sect> Description

A chief can specify a virtual sender id in <var/ids/ which the
recipient should get instead of the chief's id. Recall that deceiting
is secure since only direction-preserving deceit is possible. If the
specified virtual sender id does not fulfill this constraint, the call
works like <code/l4_i386_ipc_send()/.

<sect> Arguments

<desc

<dt/<var/ids// Structure containg true and virtual sender id. 

<dt/<var/*snd_msg// Pointer to a Send Descriptor. It can contain the 
following values:

<desc

<dt/&lt;mem>/  Ipc includes sending a message to the destination 
specified by <var/dest/. <var/*snd_msg/ must point to a valid
message. The first two 32-bit words of the message have to be given 
separately in <var/snd_dword0/ and <var/snd_dword1/.

<dt/<code/0//  Ipc includes sending a message to the destination specified by
<var/dest/. The message consists solely of the two 32-bit words 
<var/snd_dword0/ and <var/snd_dword1/. 

</desc>

<dt/<var/snd_dword0// The first dword to be transmitted.

<dt/<var/snd_dword1// The second dword to be transmitted.

<dt/<var/timeout// This 32-bit word specifies all 4 timouts, the
quadruple (snd, rcv, snd pf, rcv pf). For a detailed description see
the L4 Reference Manual.

<dt/<var/result// The message dope describing the result of the Ipc.

<sect>Return Values

The following return values are possible:

<desc

<dt/<code/0// No error occured. The optional send operation was
successful, and if a receive operation was also specified, a message
was also received correctly. 

<dt/<code/L4_IPC_ENOT_EXISTENT// Non-existing destination or source.

<dt/<code/L4_IPC_RETIMEOUT// Timeout during receive operation.

<dt/<code/L4_IPC_SETIMEOUT// Timeout during send operation.

<dt/<code/L4_IPC_RECANCELED// Receive operation cancelled by another thread.

<dt/<code/L4_IPC_SECANCELED// Send operation cancelled by another thread.

<dt/<code/L4_IPC_REMAPFAILED// Map failed due to a shortage of page
tables during receive operation.

<dt/<code/L4_IPC_SEMAPFAILED// Map failed due to a shortage of page
tables during send operation.

<dt/<code/L4_IPC_RESNDPFTO// Send pagefault timeout.

<dt/<code/L4_IPC_SERCVPFTO// Receive pagefault timeout.

<dt/<code/L4_IPC_REABORTED// Receive operation aborted by another
thread.

<dt/<code/L4_IPC_SEABORTED// Send operation aborted by another thread.

<dt/<code/L4_IPC_REMSGCUT// Received message cut. Potential reasons
are:

<desc

<dt/(a)/ The recipient's mword buffer is too small.
<dt/(b)/ The recipient does not accept enough strings.
<dt/(c)/ At least one of the recipient's string buffers is too small.

</desc>

<sect>See Also

<ref t=m id="l4_ipc"//, 
<ref t=m id="l4_i386_ipc_receive"//, 
<ref t=m id="l4_i386_ipc_reply_and_wait"//, 
<ref t=m id="l4_i386_ipc_reply_deceiting_and_wait"//, 
<ref t=m id="l4_i386_ipc_send"//, 
<ref t=m id="l4_i386_ipc_call"//,
<ref t=m id="l4_i386_ipc_wait"// 