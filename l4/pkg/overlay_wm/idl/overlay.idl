/*
 * \brief   OverlayWM - IDL interface
 * \date    2003-08-18
 * \author  Norman Feske <nf2@inf.tu-dresden.de>
 */

/*
 * Copyright (C) 2002-2004  Norman Feske  <nf2@os.inf.tu-dresden.de>
 * Technische Universitaet Dresden, Operating Systems Research Group
 *
 * This file is part of the Overlay WM package, which is distributed
 * under the  terms  of the GNU General Public Licence 2. Please see
 * the COPYING file for details.
 */

interface overlay {

	/*** REQUEST INFORMATION ABOUT PHYSICAL SCREEN ***/
	int get_screen_info([out] int *w, [out] int *h, [out] int *mode);

	/*** OPEN OVERLAY SCREEN ***/
	int  open_screen([in] int width, [in] int height, [in] int depth);

	/*** CLOSE OVERLAY SCREEN ***/
	void close_screen(void);

	/*** MAP OVERLAY SCREEN BUFFER TO THE CLIENT ***/
	int  map_screen([out, string] char **ds_ident);

	/*** UPDATE REGION OF OVERLAY SCREEN AND ALL AFFECTED OVERLAY WINDOWS ***/
	void refresh_screen([in] int x, [in] int y, [in] int w, [in] int h);

	/*** REGISTER LISTENER THREAD FOR INPUT EVENTS ***/
	void input_listener([in] CORBA_Object input_listener);

	/*** REGISTER LISTENER THREAD FOR WINDOW EVENTS ***/
	void window_listener([in] CORBA_Object window_listener);

	/*** CREATE NEW OVERLAY WINDOW ***/
	int  create_window(void);

	/*** DESTROY OVERLAY WINDOW ***/
	void destroy_window([in] int win_id);

	/*** MAKE OVERLAY WINDOW VISIBLE ***/
	void open_window([in] int win_id);

	/*** CLISE OVERLAY WINDOW ***/
	void close_window([in] int win_id);

	/*** SET POSITION AND SIZE OF AN OVERLAY WINDOW ***/
	void place_window([in] int win_id,
	                  [in] int x, [in] int y, [in] int w, [in] int h);

	/*** BRING OVERLAY WINDOW ON TOP ***/
	void top_window([in] int win_id);
};
