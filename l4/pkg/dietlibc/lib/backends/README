This directory contains the libc backends. Each backend shall provide
just some functionality (like io or memory management) so that
different backends can be combined.

deprecated dirs:
================

These directories will vanish in the future, as they are no longer
needed. Instead, functionality provided by them will be extracted and
split into pieces, so that more combinations of backends are possible.

 * preliminary
 * l4env_base
 * minimal


startup / shutdown
==================

These backends provide the functionality to startup applications and
to shut them down (things that need to be done before main() and after
exit(), abort() and return in main()).

 * l4env_start_stop
 * l4_start_stop


memory managment
================

These are responsible for providing memory.

 * simple_mem implements functions at mmap level, mostly translating
   requests to dm_phys requests. Every single mmap call will be
   forwarded to dm_phys.

 * buddy_slab_mem is a more complex memory backend as it provides own
   malloc & co. It uses no mmap as backend but replaces the
   dietlibc-internal malloc.

It should be possible and might be necessary to use both backends at
the same time, as mmap is used in the dietlibc internally instead of
malloc.


io
==

 * minimal_io provides a minimal set of backend functions to use
   printf and similar output, that is write() to fds 1 and 2 and a
   dummy seek on fds 0, 1 and 2.

 * io is currently in heavy development and provides the functionality
   to use local file descriptors, to translate them to remote servers
   and so on. io shall implement nearly the whole posix-io api and
   forward the calls to remote servers. Additionally io will contain
   support for a local namespace overlay to implement some filesystem
   functionality in a local lib. Furthermore it will be necessary to
   have a sort of function pointer table to connect to servers using a
   different api. A local lib will have to translate the calls and its
   functions must be inserted to the function pointer table at open()
   or at similar calls (socket, dup, ...).
 * basic_io is mostly a wrapper for the basic_io idl interface, normal
   object servers should use.
 * Something similar is need for network stuff and maybe other things
   too.
